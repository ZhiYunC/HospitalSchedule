@{ Layout = null; } @*取消導航欄*@
@using Demo.Models;
@{
    List<Doctor> doctors = ViewBag.doctors;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Schedule</title>

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color:white ;
        }

        .person {
            font-size: 12px;
            margin-top: 2px;
            color: #555;
        }
        

        /*科別文字樣式*/
        .selected-info {
            background-color: #c0b0b0;
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: center;
            text-align: center;
            border-radius: 10px; /* 添加圓角 */
            padding: 15px;
            width: 1000px;
            margin: auto;
            margin-top: 50px;
        }

        .selected-info h3 {
            margin: 0; /* 清除標題的預設邊距 */
            margin-left: 30px; /* 可以根據需要調整標題之間的間距 */
            font-size: 20px;
        }

        .selected-info p {
            font-size: 20px;
            margin: 0;
            
        }
        .list{
            background-color: rgba(242, 242, 242, 0.82);
            border-radius: 10px; /* 添加圓角 */
            width: 1000px;
            margin: 0 auto;/*將此灰色方塊置中*/
            padding: 15px;
            margin-top: 25px;
        }
        /*醫師班數選擇列表*/
        .doctor-list{
            align-items: center;
            justify-content: center;
            text-align: center;
            padding: 15px;
        }

        #doctorList {
            font-size: 20px;
            list-style: none; /* 移除列表項的點 */
            padding: 10px; /* 清除列表的內邊距 */
            margin-bottom: 10px;
        }

        #doctorList li {
            padding: 10px;
            border-bottom: 1px solid #ccc; /* 添加水平線，可以自行調整顏色 */
        }

        #doctorList span {
            display: inline-block;
            width: 150px; /* 設定醫生名字欄位的寬度 */
        }

        #doctorList input {
            font-size: 16px;
            width: 50px; /* 設定班數選擇按鈕的寬度 */
        }
    </style>
</head>
<body>
    <div id="sharedContentContainer"></div>

    <!-- 顯示所選值的元素 -->
    <div class="selected-info">
        <h3>科別：</h3>
        <p id="selectedDepartment"></p>
        <h3>病房：</h3>
        <p id="selectedWard"></p>
        
        
    </div>
    <div class="list">
            <ul id="doctorList">
                <!-- 醫生名字和班數選擇按鈕將在這裡動態添加 -->
                @if (doctors != null)
                {
                    @foreach (Doctor doctor in doctors)
                    {
                        <div class="doctor-list" data-department="@doctor.Department">
                            <span>@doctor.Name</span>
                            <input type="number" id="doctor@doctor.ID" min="0" max="5" value="0">
                        </div>
                    }
                }
            </ul>
    </div>

    <script>
        // 使用 fetch 顯示 Share 導航欄的檔案
        fetch('/Manager/Share')
            .then(response => response.text())
            .then(html => {
                // 将加载的 HTML 插入到共享容器中
                document.getElementById('sharedContentContainer').innerHTML = html;
            }
        );

        //獲取每頁應顯示的科別、病房、時間

        // 獲取URL中的參數函數
        function getParameterByName(name, url) {
            if (!url) url = window.location.href; // 如果未提供url，使用當前瀏覽器地址
            name = name.replace(/[\[\]]/g, "\\$&"); // 將特殊字符進行轉換，以便正確處理正則表達式
            // 使用正則表達式解析URL，並將匹配結果存儲在results中
            var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                results = regex.exec(url);
            if (!results) return null; // 如果找不到指定的參數，或者該參數值為空，則返回null或空字串
            if (!results[2]) return '';
            return decodeURIComponent(results[2].replace(/\+/g, " "));// 對參數值進行解碼，將特殊字符轉換為正確的字符
        }

        // 顯示所選的科別、時間、病房
        document.addEventListener('DOMContentLoaded', function() {
            const selectedDepartment = getParameterByName('department'); // 獲取名稱為'department'的參數值
            const selectedWard = getParameterByName('ward');  // 獲取名稱為'ward'的參數值
            
            // 將所獲取的參數值顯示在HTML中
            document.getElementById('selectedDepartment').innerText = selectedDepartment;
            document.getElementById('selectedWard').innerText = selectedWard;
        
            // 隱藏不屬於選定科別的醫生
            const allDoctorElements = document.querySelectorAll('.doctor-list');
            allDoctorElements.forEach(doctorElement => {
                const department = doctorElement.getAttribute('data-department');
                if (department !== selectedDepartment) {
                    doctorElement.style.display = 'none';
                }
            });

        });

        // 功能：選擇班數(此部分不需要)
        @* document.addEventListener('DOMContentLoaded', function() {
            const doctorsFromDatabase = @Html.Raw(Json.Serialize(doctors)); // 將C#中的醫生清單轉換成JavaScript物件

            const doctorListElement = document.getElementById('doctorList');

            doctorsFromDatabase.forEach(doctor => {
                const listItem = document.createElement('li');
                listItem.innerHTML = `
                    <div class="doctor-list">
                        <span>${doctor.Name}</span>
                        <input type="number" id="${doctor.ID}" min="0" max="30" value="0">
                    </div>
                `;
                doctorListElement.appendChild(listItem);
            });
        }); *@// 功能：選擇班數(此部分不需要)
        
    </script>

</body>
</html>
